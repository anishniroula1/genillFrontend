{"remainingRequest":"/Users/anishniroula/Documents/Genill.com/genillcom/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anishniroula/Documents/Genill.com/genillcom/src/genill/core/Users/signin/Register.vue?vue&type=style&index=0&id=a1cb0934&scoped=true&lang=css&","dependencies":[{"path":"/Users/anishniroula/Documents/Genill.com/genillcom/src/genill/core/Users/signin/Register.vue","mtime":1567205012290},{"path":"/Users/anishniroula/Documents/Genill.com/genillcom/node_modules/css-loader/index.js","mtime":1564454248138},{"path":"/Users/anishniroula/Documents/Genill.com/genillcom/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1564535804622},{"path":"/Users/anishniroula/Documents/Genill.com/genillcom/node_modules/postcss-loader/src/index.js","mtime":1564454248309},{"path":"/Users/anishniroula/Documents/Genill.com/genillcom/node_modules/cache-loader/dist/cjs.js","mtime":1564454248099},{"path":"/Users/anishniroula/Documents/Genill.com/genillcom/node_modules/vue-loader/lib/index.js","mtime":1564535804622}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.errorMessage {\n    color: red;\n}\n\n.login-input {\n    width: 100%;\n    font-size: 16px;\n    padding: 12px 16px;\n    outline: 0;\n    border-radius: 3px;\n    border: 1px solid lightgrey;\n}\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2LA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/genill/core/Users/signin","sourcesContent":["<template>\n    <div class=\"login-form\">\n        <h2 class=\"login-heading\">Register</h2>\n        <form @submit.prevent=\"register\">\n            <div class=\"form-control\">\n                <BaseInput label=\"First Name:\"\n                           v-model=\"user.firstName\"\n                           @blur=\"$v.user.firstName.$touch()\"\n                           :class=\"{ error: $v.user.firstName.$error }\"\n                />\n                <template v-if=\"$v.user.firstName.$error\">\n                    <p v-if=\"!$v.user.firstName.required\" class=\"errorMessage\">First Name is required.</p>\n                    <p v-if=\"!$v.user.firstName.alpha\" class=\"errorMessage\">Numbers or Symbols are not Allowed</p>\n                </template>\n            </div>\n\n            <div class=\"form-control\">\n                <BaseInput label=\"Last Name:\"\n                           v-model=\"user.lastName\"\n                           @blur=\"$v.user.lastName.$touch()\"\n                           :class=\"{ error: $v.user.lastName.$error }\"/>\n\n                <template v-if=\"$v.user.lastName.$error\">\n                    <p v-if=\"!$v.user.lastName.required\" class=\"errorMessage\">Last Name is required.</p>\n                    <p v-if=\"!$v.user.lastName.alpha\" class=\"errorMessage\">Numbers or Symbols are not Allowed</p>\n                </template>\n            </div>\n            <div class=\"form-control\">\n                <BaseInput label=\"Username:\"\n                           v-model=\"user.username\"\n                           @blur=\"$v.user.username.$touch()\"\n                           :class=\"{ error: $v.user.username.$error }\"\n                />\n                <p>{{ userCheck }}</p>\n                <template v-if=\"$v.user.username.$error\">\n                    <p v-if=\"!$v.user.username.required\" class=\"errorMessage\">Username is required.</p>\n                </template>\n            </div>\n            <div class=\"form-control\">\n                <EmailInput\n                        label=\"Email:\"\n                        v-model=\"user.email\"\n                        @blur=\"$v.user.email.$touch()\"\n                        :class=\"{error: $v.user.email.$error}\"\n                />\n                <template v-if=\"$v.user.email.$error\">\n                    <p v-if=\"!$v.user.email.email\" class=\"errorMessage\"></p>\n                    <p v-if=\"!$v.user.email.required\" class=\"errorMessage\">Email is required</p>\n                </template>\n                <p>{{emailCheck}}</p>\n            </div>\n            <div class=\"form-control mb-more\">\n                <PasswordInput\n                        label=\"Password\"\n                        v-model=\"user.password\"\n                        @blur=\"$v.user.password.$touch()\"\n                        :class=\"{error: $v.user.password.$error}\"\n                />\n                <template v-if=\"$v.user.password.$error\">\n                    <p v-if=\"!$v.user.password.minLength\" class=\"errorMessage\">Must be 8 Character long</p>\n                    <p v-if=\"!$v.user.password.required\" class=\"errorMessage\">Password is required</p>\n                </template>\n\n            </div>\n\n            <div class=\"form-control mb-more\">\n                <PasswordInput\n                        label=\"Confirm Password\"\n                        v-model=\"user.confirmPassword\"\n                        @blur=\"$v.user.confirmPassword.$touch()\"\n                        :class=\"{error: $v.user.confirmPassword.$error}\"\n                />\n                <template v-if=\"$v.user.confirmPassword.$error\">\n                    <p v-if=\"!$v.user.confirmPassword.sameAsPassword\" class=\"errorMessage\">Password Didn't match</p>\n                </template>\n            </div>\n\n            <div class=\"form-control\">\n                <button type=\"submit\" class=\"btn-submit\">Create Account</button>\n            </div>\n        </form>\n    </div>\n</template>\n<script lang=\"ts\">\n  import { ORDER_USER_REGISTER } from '@/genill/core/Users/signin/signin.types';\n  import { UserRoutes } from '@/genill/core/Users/user-routing.model';\n  import { UserRegister } from '@/genill/core/Users/user/User.model';\n  import {\n    checkEmailExist,\n    checkUsernameExist,\n  } from '@/genill/core/Users/user/user.service';\n  import BaseInput from '@/genill/shared/forum-component/BaseInput.vue';\n  import EmailInput from '@/genill/shared/forum-component/EmailInput.vue';\n  import HiddenInput from '@/genill/shared/forum-component/Hidden-input.vue';\n  import PasswordInput from '@/genill/shared/forum-component/PasswordInput.vue';\n  import axios from 'axios';\n  import { Component, Vue, Watch } from 'vue-property-decorator';\n  import { required, email, minLength, sameAs, alpha } from 'vuelidate/lib/validators';\n\n  @Component({\n    components: { PasswordInput, EmailInput, HiddenInput, BaseInput },\n    validations: {\n      user: {\n        firstName: { required, alpha },\n        lastName: { required, alpha },\n        username: { required },\n        email: { required, email },\n        password: { required, minLength: minLength(8) },\n        confirmPassword: { sameAsPassword: sameAs('password') },\n      },\n    },\n  })\n  export default class Register extends Vue {\n    private user = {} as UserRegister;\n    private userCheckdebouncedTime: any;\n    private emailCheckDebouncedTime: any;\n    private userCheck = '';\n    private emailCheck = '';\n\n    @Watch('user.username')\n    public usercheck(newValue: string, oldValue: string) {\n      this.userCheck = 'Searching...';\n      this.userCheckdebouncedTime();\n    }\n\n    @Watch('user.email')\n    public emailExistCheck(newValue: string, oldValue: string) {\n      this.emailCheck = 'Searching...';\n      this.emailCheckDebouncedTime();\n    }\n\n    public created() {\n      this.userCheckdebouncedTime = this.usernameSearchTimeout;\n      this.emailCheckDebouncedTime = this.emailSearchTimeout;\n    }\n\n    public isUsernameExist() {\n      this.userCheck = '';\n      const vm = this;\n      axios\n        .get(checkUsernameExist(this.user.username))\n        .then(({ data }) => {\n          vm.userCheck = data;\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n\n    public usernameSearchTimeout() {\n      setTimeout(this.isUsernameExist, 3000);\n    }\n\n    public isEmailExist() {\n      this.emailCheck = '';\n      const vm = this;\n      axios\n        .get(checkEmailExist(this.user.email))\n        .then(({ data }) => {\n          vm.emailCheck = data;\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n\n    public emailSearchTimeout() {\n      setTimeout(this.isEmailExist, 3000);\n    }\n\n    public register() {\n      this.$v.$touch();\n      if(!this.$v.$invalid) {\n        this.$store\n          .dispatch(ORDER_USER_REGISTER, this.user)\n          .then(() => {\n            this.$router.push(UserRoutes.PROFILE);\n          }).catch((err) => {\n            console.log(err)\n        });\n      }\n\n    }\n  }\n</script>\n\n<style scoped>\n    .errorMessage {\n        color: red;\n    }\n\n    .login-input {\n        width: 100%;\n        font-size: 16px;\n        padding: 12px 16px;\n        outline: 0;\n        border-radius: 3px;\n        border: 1px solid lightgrey;\n    }\n</style>\n"]}]}